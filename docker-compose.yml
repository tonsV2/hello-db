services:
  prod:
    image: tons/hello-db:${IMAGE_TAG:-latest}
    build: .
    ports:
      - "8080:8080"
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    depends_on:
      database:
        condition: service_healthy
    profiles:
      - prod

  dev:
    build:
      context: .
      target: build
    ports:
      - "8080:8080"
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    volumes:
      - .:/src
    working_dir: /src
    command: go run .
    develop:
      watch:
        - action: rebuild
          path: .
          ignore:
            - .git
            - .idea
            - README.md
            - Makefile
    depends_on:
      database:
        condition: service_healthy
    profiles:
      - dev

  database:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "psql --no-password --quiet --username $$POSTGRES_USER postgres://127.0.0.1/$$POSTGRES_DB -p 5432 --command \"SELECT 'ok'\" > /dev/null" ]
      start_period: 5s
      interval: 3s
      timeout: 3s
      retries: 5
    profiles:
      - dev
      - prod
